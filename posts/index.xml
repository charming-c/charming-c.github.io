<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Charming Zone</title><link>https://charming-c.github.io/posts/</link><description>Recent content in Posts on Charming Zone</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 20 Apr 2022 19:23:58 +0800</lastBuildDate><atom:link href="https://charming-c.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>My First Post</title><link>https://charming-c.github.io/posts/my-first-post/</link><pubDate>Wed, 20 Apr 2022 19:23:58 +0800</pubDate><guid>https://charming-c.github.io/posts/my-first-post/</guid><description>&lt;h1 id="浅谈viewactivitywindow">浅谈view、activity、window&lt;/h1>
&lt;h2 id="1从-setcontentview出发">1、从 setContentView（）出发&lt;/h2>
&lt;p>对于activity的添加一个布局我们一般都会使用这个方法，我们尝试从源码的角度去解读这样的一方法的工作流程&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * Set the activity content from a layout resource. The resource will be
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * inflated, adding all top-level views to the activity.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * @param layoutResID Resource ID to be inflated.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * @see #setContentView(android.view.View)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * @see #setContentView(android.view.View, android.view.ViewGroup.LayoutParams)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">setContentView&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nd">@LayoutRes&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">layoutResID&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">getWindow&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">setContentView&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">layoutResID&lt;/span>&lt;span class="o">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">initWindowDecorActionBar&lt;/span>&lt;span class="o">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这里就可以看到，我们的布局文件其实并不是加载进activity中的，而是调用了当前 activity 所持有的一个 Window 对象，然后调用该对象 mWindow 的 setContenView() 方法，而这个 mWindow 是在 attach 方法里赋的初值 &lt;code>mWindow = new PhoneWindow(this, window, activityConfigCallback);&lt;/code> 他实际是一个 PhoneWindow 的 对象，对于 PhoneWindow的方法：&lt;/p></description></item><item><title>My First Post</title><link>https://charming-c.github.io/posts/my-first-post2/</link><pubDate>Wed, 20 Apr 2022 19:23:58 +0800</pubDate><guid>https://charming-c.github.io/posts/my-first-post2/</guid><description>&lt;h1 id="浅谈viewactivitywindow">浅谈view、activity、window&lt;/h1>
&lt;h2 id="1从-setcontentview出发">1、从 setContentView（）出发&lt;/h2>
&lt;p>对于activity的添加一个布局我们一般都会使用这个方法，我们尝试从源码的角度去解读这样的一方法的工作流程&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * Set the activity content from a layout resource. The resource will be
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * inflated, adding all top-level views to the activity.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * @param layoutResID Resource ID to be inflated.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * @see #setContentView(android.view.View)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * @see #setContentView(android.view.View, android.view.ViewGroup.LayoutParams)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">public&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">setContentView&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nd">@LayoutRes&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">layoutResID&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">getWindow&lt;/span>&lt;span class="o">().&lt;/span>&lt;span class="na">setContentView&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="n">layoutResID&lt;/span>&lt;span class="o">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">initWindowDecorActionBar&lt;/span>&lt;span class="o">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这里就可以看到，我们的布局文件其实并不是加载进activity中的，而是调用了当前 activity 所持有的一个 Window 对象，然后调用该对象 mWindow 的 setContenView() 方法，而这个 mWindow 是在 attach 方法里赋的初值 &lt;code>mWindow = new PhoneWindow(this, window, activityConfigCallback);&lt;/code> 他实际是一个 PhoneWindow 的 对象，对于 PhoneWindow的方法：&lt;/p></description></item></channel></rss>